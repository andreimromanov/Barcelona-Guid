// hooks/useDiaryContract.ts
import { ethers } from "ethers";
import abi from "../abi/FitnessDiary.json";
import addressJson from "../abi/FitnessDiary.address.json";

export async function getDiaryContract() {
  if (typeof window === "undefined") throw new Error("No window object");

  // üöÄ –í–∞—Ä–∏–∞–Ω—Ç 1: Warpcast Mini (Farcaster –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –∫–æ—à–µ–ª—ë–∫)
  if ((window as any).farcaster?.wallet) {
    return {
      provider: null,
      signer: null,
      contract: {
        // —Ç–æ–ª—å–∫–æ "–∑–∞–≥–ª—É—à–∫–∞": –∑–∞–ø–∏—Å—å –¥–µ–ª–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ frame.tsx
        address: addressJson.address,
        abi,
      },
      isFarcaster: true,
    };
  }

  // üåç –í–∞—Ä–∏–∞–Ω—Ç 2: –û–±—ã—á–Ω—ã–π —Å–∞–π—Ç (MetaMask / WalletConnect)
  if (!(window as any).ethereum) {
    throw new Error("MetaMask not detected");
  }

  const provider = new ethers.BrowserProvider((window as any).ethereum);
  const signer = await provider.getSigner();
  const contract = new ethers.Contract(addressJson.address, abi, signer);

  return { provider, signer, contract, isFarcaster: false };
}
