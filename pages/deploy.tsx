import { useAccount, useWalletClient } from 'wagmi'
import { ethers } from 'ethers'
import abi from '../abi/FitnessDiary.json'
import bytecode from '../abi/FitnessDiary.bytecode.json'

export default function DeployPage() {
  const { isConnected } = useAccount()
  const { data: walletClient } = useWalletClient()

  const deploy = async () => {
    if (!walletClient) return alert('–ü–æ–¥–∫–ª—é—á–∏ –∫–æ—à–µ–ª—ë–∫')

    try {
      const provider = new ethers.BrowserProvider(walletClient)
      const signer = await provider.getSigner()

      const factory = new ethers.ContractFactory(abi, bytecode, signer)
      const contract = await factory.deploy()

      await contract.waitForDeployment()

      alert(`–ö–æ–Ω—Ç—Ä–∞–∫—Ç –∑–∞–¥–µ–ø–ª–æ–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: ${await contract.getAddress()}`)
    } catch (err) {
      console.error(err)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ, —Å–º–æ—Ç—Ä–∏ –∫–æ–Ω—Å–æ–ª—å')
    }
  }

  return (
    <div className="p-10">
      <h1 className="text-2xl font-bold mb-4">üöÄ Deploy FitnessDiary</h1>
      {isConnected ? (
        <button onClick={deploy} className="bg-green-500 text-white px-4 py-2 rounded">
          –ó–∞–¥–µ–ø–ª–æ–∏—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç
        </button>
      ) : (
        <p>–ü–æ–¥–∫–ª—é—á–∏ –∫–æ—à–µ–ª—ë–∫</p>
      )}
    </div>
  )
}
