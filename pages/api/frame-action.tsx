// pages/api/frame-action.tsx
import { createFrames, Button } from "frames.js/next"

const frames = createFrames({
  basePath: "/api/frame-action",
})

const handler = async (ctx: any) => {
  const action = ctx.searchParams?.action ?? ""

  if (action === "entries") {
    return {
      image: (
        <div style={{ fontSize: 28, color: "black", padding: 40 }}>
          –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏:
          <br />‚Ä¢ 80.0 –∫–≥ ‚Äî 2500/3000 –∫–∞–ª, 12000 —à–∞–≥–æ–≤
          <br />‚Ä¢ 79.5 –∫–≥ ‚Äî 2400/3100 –∫–∞–ª, 11000 —à–∞–≥–æ–≤
        </div>
      ),
      buttons: [
        Button({ text: "üîô –ù–∞–∑–∞–¥", action: "post", target: "/api/frame-action" }),
      ],
    }
  }

  if (action === "log") {
    return {
      image: (
        <div style={{ fontSize: 28, color: "blue", padding: 40 }}>
          –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é:
          <br />
          üìÖ YYYYMMDD, ‚öñÔ∏è –í–µ—Å (–∫–≥), üî• –ö–∞–ª–æ—Ä–∏–∏ In, üí™ –ö–∞–ª–æ—Ä–∏–∏ Out, üö∂ –®–∞–≥–∏
        </div>
      ),
      textInput: "20250929,79.3,2500,3000,12000",
      buttons: [
        Button({
          text: "‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å",
          action: "post",
          target: "/api/frame-action?action=save",
        }),
      ],
    }
  }

  if (action === "save") {
    const input = ctx.message?.inputText || ""
    const parts = input.split(",").map((p: string) => p.trim())

    if (parts.length < 5) {
      return {
        image: (
          <div style={{ fontSize: 28, color: "red", padding: 40 }}>
            ‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö
          </div>
        ),
        buttons: [
          Button({ text: "üîô –ù–∞–∑–∞–¥", action: "post", target: "/api/frame-action" }),
        ],
      }
    }

    const [dateStr, weightStr, calInStr, calOutStr, stepsStr] = parts
    const url = `https://fitness-diary-web.vercel.app/frame?date=${dateStr}&weight=${weightStr}&calIn=${calInStr}&calOut=${calOutStr}&steps=${stepsStr}`

    return {
      image: (
        <div style={{ fontSize: 28, color: "green", padding: 40 }}>
          ‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã!
          <br />
          –í–µ—Å: {weightStr} –∫–≥
          <br />
          –ö–∞–ª–æ—Ä–∏–∏: {calInStr}/{calOutStr}
          <br />
          –®–∞–≥–∏: {stepsStr}
          <br />
          –¢–µ–ø–µ—Ä—å –ø–æ–¥–ø–∏—à–∏—Ç–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é
        </div>
      ),
      buttons: [
        Button({
          text: "üîó –ü–æ–¥–ø–∏—Å–∞—Ç—å –≤–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–º –∫–æ—à–µ–ª—å–∫–µ",
          action: "link",
          target: url,
        }),
      ],
    }
  }

  // fallback ‚Äî –û–ë–Ø–ó–ê–¢–ï–õ–ï–ù
  return {
    image: (
      <div style={{ fontSize: 28, color: "black", padding: 40 }}>
        üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Fitness Diary
      </div>
    ),
    buttons: [
      Button({
        text: "üìñ –ú–æ–∏ –∑–∞–ø–∏—Å–∏",
        action: "post",
        target: "/api/frame-action?action=entries",
      }),
      Button({
        text: "‚ûï –î–æ–±–∞–≤–∏—Ç—å",
        action: "post",
        target: "/api/frame-action?action=log",
      }),
    ],
  }
}

export default frames(handler)
